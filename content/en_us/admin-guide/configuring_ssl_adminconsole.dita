<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="configuring_ssl_adminconsole">
	<title>Configure SSL for the Administration Console</title>
	<shortdesc>To configure SSL for the Administration Console, you need a signed
		certificate.</shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<indexterm>SSL <indexterm>Admin Console</indexterm>
				</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<taskbody>
		<context> </context>
		<steps>
			<step>
				<cmd>Create a p12 keystore that includes the signed certificate and private
					key:</cmd>
				<info>
					<codeblock>openssl pkcs12 -export -out signedcert.p12 -inkey [key_file] -in [certificate_file] -name jetty -certfile gd_bundle.crt</codeblock>
				</info>
				<stepresult>Ensure that the keystore is readable by the Eucalyptus
					user.</stepresult>
			</step>
			<step>
				<cmd>Verify that the certificate was converted correctly:</cmd>
				<info>
					<codeblock>keytool -exportcert -v -alias jetty -keystore signedcert.p12 -storetype pkcs12 > certificate.crt
keytool -printcert -file certificate.crt
</codeblock>
				</info>
			</step>
			<step>
				<cmd>Move the new certificate store into place:</cmd>
				<info>
					<codeblock>mv signedcert.p12 /var/lib/eucalyptus/keys/signedcert.p12
chown eucalyptus:eucalyptus /var/lib/eucalyptus/keys/signedcert.p12
chmod 600 /var/lib/eucalyptus/keys/signedcert.p12
</codeblock>
				</info>
			</step>
			<step>
				<cmd>Create a temporary directory, and extract the <codeph>eucalyptus-www</codeph>
					jar:</cmd>
				<info>
					<codeblock>mkdir /tmp/eucalyptus-www
cd /tmp/eucalyptus-www
unzip /usr/share/eucalyptus/eucalyptus-www-<ph conref="../shared/conrefs.dita#prod/version"/>.jar eucalyptus-jetty.xml</codeblock>
				</info>
			</step>
			<step>
				<cmd>Edit eucalyptus-jetty.xml to point to the new keystore. The following example
					assumes that your new keystore is stored in
						<filepath>/var/lib/eucalyptus/keys/</filepath>:</cmd>
				<info>
					<codeblock>&lt;Set name="keystore">/var/lib/eucalyptus/keys/signedcert.p12&lt;/Set>
&lt;Set name="truststore">/var/lib/etc/eucalyptus/keys/signedcert.p12&lt;/Set>
&lt;Set name="password">[yourkeystorepassword]&lt;/Set>
&lt;Set name="keyPassword">[yourkeypassword]&lt;/Set>
&lt;Set name="trustPassword">[yourkeystorepassword]&lt;/Set>
</codeblock>
				</info>
			</step>
			<step>
				<cmd>Copy the eucalyptus-jetty.xml file to
						<filepath>/etc/eucalyptus/cloud.d/</filepath>.</cmd>
				<info>
					<note type="important">This file contains the keys for your keystore. Ensure
						that it is protected, and can only be read or written to by the
							<codeph>eucalyptus</codeph> user.</note>
				</info>
			</step>
			<step>
				<cmd>Restart Eucalyptus services:</cmd>
				<info>
					<codeblock>service eucalyptus-cloud restart
service eucalyptus-cc restart
</codeblock>
				</info>
			</step>

		</steps>
		<postreq>After restarting Eucalyptus, verify that the system is up using
				<codeph>euca-describe-services</codeph>. You should now be able to access the Admin
			UI over SSL at <filepath>http://[CLC-IP]:8443/</filepath>.</postreq>
	</taskbody>
</task>
