<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE glossgroup PUBLIC "-//OASIS//DTD DITA Glossary Group//EN" "glossgroup.dtd">
<glossgroup id="glossary">
  <title>Glossary</title>
  <glossentry id="cluster">
    <glossterm>cluster</glossterm>
    <glossdef>A group of resources that contains a CC, an SC and, optionally, a Broker.</glossdef>
  </glossentry>

<glossentry id="az">
	<glossterm>availability zone</glossterm>
<glossdef>An availability zone for AWS denotes a large subset of their cloud environment. Eucalyptus refines this definition to denote a subset of the cloud that shares a local area network. Each availability zone has its own cluster controller and storage controller.</glossdef>
</glossentry>
<glossentry id="aws">	
<glossterm>AWS</glossterm>
<glossdef>Amazon Web Services</glossdef>
</glossentry>
<glossentry id="bucket">
<glossterm>bucket storage</glossterm>
<glossdef>A storage container that accepts objects via PUT and GET commands.</glossdef> 
</glossentry>
<glossentry id="bundling">
<glossterm>bundling</glossterm>
<glossdef>A virtual machine image splits the image into multiple image parts to facilitate ease of uploading. It also generates an XML manifest file containing metadata referencing the image, including image parts and kernel, which is used to assemble instances of the image.</glossdef>
</glossentry>
<glossentry id="clc">
<glossterm>Cloud Controller</glossterm>
<glossdef>The Cloud Controller (CLC) is the entry-point into the cloud for administrators, developers, project managers, and end-users. The CLC queries the node managers [SM1] for information about resources, makes high-level scheduling decisions, and makes requests to the Cluster Controllers (CCs). As the interface to the management platform, the CLC is responsible for exposing and managing the underlying virtualized resources (servers, network, and storage). You can access the CLC through Amazon’s Elastic Compute Cloud (EC2) and through a web-based Dashboard.</glossdef>
</glossentry>
<glossentry id="cc">
<glossterm>Cluster Controller</glossterm>
<glossdef>The Cluster Controller (CC) generally executes on a machine that has network connectivity
	to both the machines running the Node Controller (NC) and to the machine running the CLC. CCs
	gather information about a set of node machines and schedules virtual machine (VM) execution on specific nodes. The CC also manages the virtual machine networks and participates in the enforcement of SLAs[SM3]  as directed by the CLC. All NCs associated with a single CC must be in the same broadcast domain (Ethernet).</glossdef>
</glossentry>
	<glossentry id="dynamicblockvol">
		<glossterm>dynamic block volume</glossterm>
		<glossdef>A dynamic block volume is similar to a raw block storage device that can be used with VM
			instances. You can create, attach, detach, describe, bundle, and delete volumes. You can also create and delete snapshots of volumes and create new volumes from snapshots</glossdef>
	</glossentry>
	<glossentry id="elasticips">
		<glossterm>elastic IP</glossterm>
		<glossdef>Public IP addresses that you can reserve and dynamically associate with VM instances.</glossdef>
	</glossentry>
	<glossentry id="instancetype">
		<glossterm>instance type</glossterm>
		<glossdef>An instance type defines what hardware the instance has, including the amount of memory, disk space, and CPU power.</glossdef>
	</glossentry>
	<glossentry id="kernalrd">
<glossterm>kernel/ramdisk pair</glossterm>
<glossdef>A ramdisk contains drivers that direct the kernel to launch appropriate system files when instantiating a virtual machine.</glossdef>
</glossentry>
<glossentry id="nc">
<glossterm>Node Controller</glossterm>
<glossdef>The Node Controller (NC) executes on any machine that hosts VM instances. The NC controls VM activities, including the execution, inspection, and termination of VM instances. It also fetches and maintains a local cache of instance images, and it queries and controls the system software (host OS and the hypervisor) in response to queries and control requests from the CC. The NC is also responsible for the management of the virtual network endpoint.</glossdef>
</glossentry>
<glossentry id="sc">
<glossterm>Storage Controller</glossterm>
<glossdef>The Storage Controller (SC) provides functionality similar to the [5] Amazon Elastic Block Storage (EBS) and is capable of interfacing with various storage systems (NFS, iSCSI, SAN devices, etc.). Elastic block storage exports storage volumes that can be attached by a VM and mounted or accessed as a raw block device.  EBS volumes persist past VM termination and are commonly used to store persistent data.   An EBS volume cannot be shared between VMs and can only be accessed within the same availability zone in which the VM is running.  Users can create snapshots from EBS volumes. Snapshots are stored in Walrus and made available across availability zones. Eucalyptus with SAN support lets you use your enterprise-grade SAN devices to host EBS storage within a Eucalyptus cloud.</glossdef>
</glossentry>
<glossentry id="broker">
<glossterm>VMware Broker</glossterm>
<glossdef>VMware Broker (Broker or VB) is an optional Eucalyptus component activated only in versions of Eucalyptus with VMware support. VMware Broker enables Eucalyptus to deploy VMs on VMware infrastructure elements and mediates all interactions between the Cluster Controller (CC) and VMware hypervisors (ESX/ESXi) either directly or through VMware vCenter.</glossdef>
</glossentry>
<glossentry id="walrus">
	<glossterm>Walrus</glossterm>
<glossdef>Walrus allows users to store persistent data, organized as buckets and objects. You can
	use Walrus to create, delete, and list buckets, or to put, get, and delete objects, or to set
	access control policies. Walrus is interface compatible with Amazon’s Simple Storage Service (S3),
	providing a mechanism for storing and accessing virtual machine images and user data.  Note that
	Walrus access is global to the entire Eucalyptus cloud. This means that it can be accessed by
	end-users, whether the user is running a client from outside the cloud or from a virtual machine instance running inside the cloud.</glossdef>
</glossentry>
</glossgroup>